{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\truba\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0434\\u0435\\u043B\\u043E\\u0439 \\u043A\\u0443\\u043F\\u0438 \\u043F\\u043E\\u0434\\u0430\\u0440\\u0438 \\u0434\\u0430\\u0439\\\\web-plus-docker-and-compose\\\\frontend\\\\src\\\\components\\\\main-page\\\\main-page.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Route, useRouteMatch, useLocation, Redirect } from 'react-router-dom';\nimport { UserContext } from '../../utils/context';\nimport { Collection } from '../collection';\nimport { Subheader } from './subheader';\nimport { getLastCards, getTopCards } from '../../utils/api';\nimport { CollectionsView } from './collections-view';\nimport { CardListView } from './card-lists-view';\nimport styles from './main-page.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainPage = _ref => {\n  _s();\n\n  let {\n    extraClass = ''\n  } = _ref;\n  const [user] = React.useContext(UserContext);\n  const [lastCards, setLastCards] = React.useState([]);\n  const [topCards, setTopCards] = React.useState([]);\n  const [pagData, setPagData] = React.useState({});\n  const {\n    path,\n    url\n  } = useRouteMatch();\n  const location = useLocation();\n  const isLogin = !!user.id;\n  useEffect(() => {\n    Promise.all([getLastCards(), getTopCards()]).then(_ref2 => {\n      let [last, top] = _ref2;\n      setLastCards(last);\n      setTopCards(top);\n    });\n  }, []);\n  const linePath = `${path}/line`;\n  const collectionsPath = `${path}/collections`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.content} ${extraClass}`,\n    children: [/*#__PURE__*/_jsxDEV(Subheader, {\n      path: path,\n      location: location,\n      isLogin: isLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: linePath,\n      render: () => /*#__PURE__*/_jsxDEV(CardListView, {\n        lastCards: lastCards,\n        topCards: topCards,\n        isLogin: isLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n      from: path,\n      to: linePath\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainPage, \"L3ERNvWQNcL4xmojPVJ+Dog+OaE=\", false, function () {\n  return [useRouteMatch, useLocation];\n});\n\n_c = MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["C:/Users/truba/OneDrive/Рабочий стол/делой купи подари дай/web-plus-docker-and-compose/frontend/src/components/main-page/main-page.jsx"],"names":["React","useEffect","Route","useRouteMatch","useLocation","Redirect","UserContext","Collection","Subheader","getLastCards","getTopCards","CollectionsView","CardListView","styles","MainPage","extraClass","user","useContext","lastCards","setLastCards","useState","topCards","setTopCards","pagData","setPagData","path","url","location","isLogin","id","Promise","all","then","last","top","linePath","collectionsPath","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,KADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,QAJF,QAKO,kBALP;AAMA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,iBAA1C;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAIA,OAAO,MAAMC,QAAQ,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAAEC,IAAAA,UAAU,GAAG;AAAf,GAAwB;AAC/C,QAAM,CAACC,IAAD,IAAShB,KAAK,CAACiB,UAAN,CAAiBX,WAAjB,CAAf;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BnB,KAAK,CAACoB,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BtB,KAAK,CAACoB,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBxB,KAAK,CAACoB,QAAN,CAAe,EAAf,CAA9B;AAEA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAgBvB,aAAa,EAAnC;AACA,QAAMwB,QAAQ,GAAGvB,WAAW,EAA5B;AACA,QAAMwB,OAAO,GAAG,CAAC,CAACZ,IAAI,CAACa,EAAvB;AAEA5B,EAAAA,SAAS,CAAC,MAAM;AACd6B,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACtB,YAAY,EAAb,EAAiBC,WAAW,EAA5B,CAAZ,EAA6CsB,IAA7C,CAAkD,SAAiB;AAAA,UAAhB,CAACC,IAAD,EAAOC,GAAP,CAAgB;AACjEf,MAAAA,YAAY,CAACc,IAAD,CAAZ;AACAX,MAAAA,WAAW,CAACY,GAAD,CAAX;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOA,QAAMC,QAAQ,GAAI,GAAEV,IAAK,OAAzB;AACA,QAAMW,eAAe,GAAI,GAAEX,IAAK,cAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAG,GAAEZ,MAAM,CAACwB,OAAQ,IAAGtB,UAAW,EAAhD;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEU,IAAjB;AAAuB,MAAA,QAAQ,EAAEE,QAAjC;AAA2C,MAAA,OAAO,EAAEC;AAApD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,IAAI,EAAEO,QADR;AAEE,MAAA,MAAM,EAAE,mBACN,QAAC,YAAD;AACE,QAAA,SAAS,EAAEjB,SADb;AAEE,QAAA,QAAQ,EAAEG,QAFZ;AAGE,QAAA,OAAO,EAAEO;AAHX;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YAFF,eAkBE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEH,IAAhB;AAAsB,MAAA,EAAE,EAAEU;AAA1B;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA1CM;;GAAMrB,Q;UAMWX,a,EACLC,W;;;KAPNU,Q","sourcesContent":["import React, { useEffect } from 'react';\r\nimport {\r\n  Route,\r\n  useRouteMatch,\r\n  useLocation,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport { UserContext } from '../../utils/context';\r\nimport { Collection } from '../collection';\r\nimport { Subheader } from './subheader';\r\nimport { getLastCards, getTopCards } from '../../utils/api';\r\nimport { CollectionsView } from './collections-view';\r\nimport { CardListView } from './card-lists-view';\r\nimport styles from './main-page.module.css';\r\n\r\n\r\n\r\nexport const MainPage = ({ extraClass = '' }) => {\r\n  const [user] = React.useContext(UserContext);\r\n  const [lastCards, setLastCards] = React.useState([]);\r\n  const [topCards, setTopCards] = React.useState([]);\r\n  const [pagData, setPagData] = React.useState({});\r\n\r\n  const { path, url } = useRouteMatch();\r\n  const location = useLocation();\r\n  const isLogin = !!user.id;\r\n\r\n  useEffect(() => {\r\n    Promise.all([getLastCards(), getTopCards()]).then(([last, top]) => {\r\n      setLastCards(last);\r\n      setTopCards(top);\r\n    });\r\n  }, []);\r\n\r\n  const linePath = `${path}/line`\r\n  const collectionsPath = `${path}/collections`\r\n\r\n  return (\r\n    <div className={`${styles.content} ${extraClass}`}>\r\n      <Subheader path={path} location={location} isLogin={isLogin}/>\r\n      <Route\r\n        path={linePath}\r\n        render={() => (\r\n          <CardListView\r\n            lastCards={lastCards}\r\n            topCards={topCards}\r\n            isLogin={isLogin}\r\n          />\r\n        )}\r\n      />\r\n      {/* <Route\r\n        exact\r\n        path={collectionsPath}\r\n        render={() => <CollectionsView url={url} />}\r\n      />\r\n      <Route path={`${path}/collections/:id`} render={() => <Collection />} /> */}\r\n      <Redirect from={path} to={linePath}/>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}